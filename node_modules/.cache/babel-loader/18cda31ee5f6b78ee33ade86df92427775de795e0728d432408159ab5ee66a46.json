{"ast":null,"code":"import * as QuatFunc from './functions/QuatFunc.js';\nexport class Quat extends Array {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    super(x, y, z, w);\n    this.onChange = () => {};\n\n    // Keep reference to proxy target to avoid triggering onChange internally\n    this._target = this;\n\n    // Return a proxy to trigger onChange when array elements are edited directly\n    const triggerProps = ['0', '1', '2', '3'];\n    return new Proxy(this, {\n      set(target, property) {\n        const success = Reflect.set(...arguments);\n        if (success && triggerProps.includes(property)) target.onChange();\n        return success;\n      }\n    });\n  }\n  get x() {\n    return this[0];\n  }\n  get y() {\n    return this[1];\n  }\n  get z() {\n    return this[2];\n  }\n  get w() {\n    return this[3];\n  }\n  set x(v) {\n    this._target[0] = v;\n    this.onChange();\n  }\n  set y(v) {\n    this._target[1] = v;\n    this.onChange();\n  }\n  set z(v) {\n    this._target[2] = v;\n    this.onChange();\n  }\n  set w(v) {\n    this._target[3] = v;\n    this.onChange();\n  }\n  identity() {\n    QuatFunc.identity(this._target);\n    this.onChange();\n    return this;\n  }\n  set(x, y, z, w) {\n    if (x.length) return this.copy(x);\n    QuatFunc.set(this._target, x, y, z, w);\n    this.onChange();\n    return this;\n  }\n  rotateX(a) {\n    QuatFunc.rotateX(this._target, this._target, a);\n    this.onChange();\n    return this;\n  }\n  rotateY(a) {\n    QuatFunc.rotateY(this._target, this._target, a);\n    this.onChange();\n    return this;\n  }\n  rotateZ(a) {\n    QuatFunc.rotateZ(this._target, this._target, a);\n    this.onChange();\n    return this;\n  }\n  inverse() {\n    let q = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._target;\n    QuatFunc.invert(this._target, q);\n    this.onChange();\n    return this;\n  }\n  conjugate() {\n    let q = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._target;\n    QuatFunc.conjugate(this._target, q);\n    this.onChange();\n    return this;\n  }\n  copy(q) {\n    QuatFunc.copy(this._target, q);\n    this.onChange();\n    return this;\n  }\n  normalize() {\n    let q = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._target;\n    QuatFunc.normalize(this._target, q);\n    this.onChange();\n    return this;\n  }\n  multiply(qA, qB) {\n    if (qB) {\n      QuatFunc.multiply(this._target, qA, qB);\n    } else {\n      QuatFunc.multiply(this._target, this._target, qA);\n    }\n    this.onChange();\n    return this;\n  }\n  dot(v) {\n    return QuatFunc.dot(this._target, v);\n  }\n  fromMatrix3(matrix3) {\n    QuatFunc.fromMat3(this._target, matrix3);\n    this.onChange();\n    return this;\n  }\n  fromEuler(euler, isInternal) {\n    QuatFunc.fromEuler(this._target, euler, euler.order);\n    // Avoid infinite recursion\n    if (!isInternal) this.onChange();\n    return this;\n  }\n  fromAxisAngle(axis, a) {\n    QuatFunc.setAxisAngle(this._target, axis, a);\n    this.onChange();\n    return this;\n  }\n  slerp(q, t) {\n    QuatFunc.slerp(this._target, this._target, q, t);\n    this.onChange();\n    return this;\n  }\n  fromArray(a) {\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._target[0] = a[o];\n    this._target[1] = a[o + 1];\n    this._target[2] = a[o + 2];\n    this._target[3] = a[o + 3];\n    this.onChange();\n    return this;\n  }\n  toArray() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    a[o] = this[0];\n    a[o + 1] = this[1];\n    a[o + 2] = this[2];\n    a[o + 3] = this[3];\n    return a;\n  }\n}","map":{"version":3,"names":["QuatFunc","Quat","Array","constructor","x","arguments","length","undefined","y","z","w","onChange","_target","triggerProps","Proxy","set","target","property","success","Reflect","includes","v","identity","copy","rotateX","a","rotateY","rotateZ","inverse","q","invert","conjugate","normalize","multiply","qA","qB","dot","fromMatrix3","matrix3","fromMat3","fromEuler","euler","isInternal","order","fromAxisAngle","axis","setAxisAngle","slerp","t","fromArray","o","toArray"],"sources":["/home/nigro/Documents/personal_website/ngrlcu.github.io/node_modules/ogl/src/math/Quat.js"],"sourcesContent":["import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n\n        // Keep reference to proxy target to avoid triggering onChange internally\n        this._target = this;\n\n        // Return a proxy to trigger onChange when array elements are edited directly\n        const triggerProps = ['0', '1', '2', '3'];\n        return new Proxy(this, {\n            set(target, property) {\n                const success = Reflect.set(...arguments);\n                if (success && triggerProps.includes(property)) target.onChange();\n                return success;\n            },\n        });\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this._target[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this._target[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this._target[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this._target[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this._target);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this._target, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this._target) {\n        QuatFunc.invert(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this._target) {\n        QuatFunc.conjugate(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this._target) {\n        QuatFunc.normalize(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this._target, qA, qB);\n        } else {\n            QuatFunc.multiply(this._target, this._target, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this._target, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this._target, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler, isInternal) {\n        QuatFunc.fromEuler(this._target, euler, euler.order);\n        // Avoid infinite recursion\n        if (!isInternal) this.onChange();\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this._target, axis, a);\n        this.onChange();\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this._target, this._target, q, t);\n        this.onChange();\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this._target[0] = a[o];\n        this._target[1] = a[o + 1];\n        this._target[2] = a[o + 2];\n        this._target[3] = a[o + 3];\n        this.onChange();\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}