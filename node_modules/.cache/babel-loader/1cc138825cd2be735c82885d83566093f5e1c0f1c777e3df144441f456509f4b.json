{"ast":null,"code":"import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\nexport class Flowmap {\n  constructor(gl) {\n    let {\n      size = 128,\n      // default size of the render targets\n      falloff = 0.3,\n      // size of the stamp, percentage of the size\n      alpha = 1,\n      // opacity of the stamp\n      dissipation = 0.98,\n      // affects the speed that the stamp fades. Closer to 1 is slower\n      type // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const _this = this;\n    this.gl = gl;\n\n    // output uniform containing render target textures\n    this.uniform = {\n      value: null\n    };\n    this.mask = {\n      read: null,\n      write: null,\n      // Helper function to ping pong the render targets and update the uniform\n      swap: () => {\n        let temp = _this.mask.read;\n        _this.mask.read = _this.mask.write;\n        _this.mask.write = temp;\n        _this.uniform.value = _this.mask.read.texture;\n      }\n    };\n    {\n      createFBOs();\n      this.aspect = 1;\n      this.mouse = new Vec2();\n      this.velocity = new Vec2();\n      this.mesh = initProgram();\n    }\n    function createFBOs() {\n      // Requested type not supported, fall back to half float\n      if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n      let minFilter = (() => {\n        if (gl.renderer.isWebgl2) return gl.LINEAR;\n        if (gl.renderer.extensions[\"OES_texture_\".concat(type === gl.FLOAT ? '' : 'half_', \"float_linear\")]) return gl.LINEAR;\n        return gl.NEAREST;\n      })();\n      const options = {\n        width: size,\n        height: size,\n        type,\n        format: gl.RGBA,\n        internalFormat: gl.renderer.isWebgl2 ? type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F : gl.RGBA,\n        minFilter,\n        depth: false\n      };\n      _this.mask.read = new RenderTarget(gl, options);\n      _this.mask.write = new RenderTarget(gl, options);\n      _this.mask.swap();\n    }\n    function initProgram() {\n      return new Mesh(gl, {\n        // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n        geometry: new Triangle(gl),\n        program: new Program(gl, {\n          vertex,\n          fragment,\n          uniforms: {\n            tMap: _this.uniform,\n            uFalloff: {\n              value: falloff * 0.5\n            },\n            uAlpha: {\n              value: alpha\n            },\n            uDissipation: {\n              value: dissipation\n            },\n            // User needs to update these\n            uAspect: {\n              value: 1\n            },\n            uMouse: {\n              value: _this.mouse\n            },\n            uVelocity: {\n              value: _this.velocity\n            }\n          },\n          depthTest: false\n        })\n      });\n    }\n  }\n  update() {\n    this.mesh.program.uniforms.uAspect.value = this.aspect;\n    this.gl.renderer.render({\n      scene: this.mesh,\n      target: this.mask.write,\n      clear: false\n    });\n    this.mask.swap();\n  }\n}\nconst vertex = /* glsl */\"\\n    attribute vec2 uv;\\n    attribute vec2 position;\\n\\n    varying vec2 vUv;\\n\\n    void main() {\\n        vUv = uv;\\n        gl_Position = vec4(position, 0, 1);\\n    }\\n\";\nconst fragment = /* glsl */\"\\n    precision highp float;\\n\\n    uniform sampler2D tMap;\\n\\n    uniform float uFalloff;\\n    uniform float uAlpha;\\n    uniform float uDissipation;\\n    \\n    uniform float uAspect;\\n    uniform vec2 uMouse;\\n    uniform vec2 uVelocity;\\n\\n    varying vec2 vUv;\\n\\n    void main() {\\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\\n\\n        vec2 cursor = vUv - uMouse;\\n        cursor.x *= uAspect;\\n\\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\\n\\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\\n\\n        gl_FragColor = color;\\n    }\\n\";","map":{"version":3,"names":["RenderTarget","Program","Mesh","Vec2","Triangle","Flowmap","constructor","gl","size","falloff","alpha","dissipation","type","arguments","length","undefined","_this","uniform","value","mask","read","write","swap","temp","texture","createFBOs","aspect","mouse","velocity","mesh","initProgram","HALF_FLOAT","renderer","extensions","HALF_FLOAT_OES","minFilter","isWebgl2","LINEAR","concat","FLOAT","NEAREST","options","width","height","format","RGBA","internalFormat","RGBA32F","RGBA16F","depth","geometry","program","vertex","fragment","uniforms","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","depthTest","update","render","scene","target","clear"],"sources":["/home/nigro/Documents/personal_website/ngrlcu.github.io/node_modules/ogl/src/extras/Flowmap.js"],"sourcesContent":["import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}