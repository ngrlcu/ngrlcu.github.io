{"ast":null,"code":"import{useEffect,useRef}from\"react\";import{Renderer,Program,Mesh,Triangle,Vec3}from\"ogl\";import'../assets/styles/Orb.scss';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Orb(_ref){let{hue=0,hoverIntensity=0.2,rotateOnHover=true,forceHoverState=false}=_ref;const ctnDom=useRef(null);const vert=/* glsl */\"\\n    precision highp float;\\n    attribute vec2 position;\\n    attribute vec2 uv;\\n    varying vec2 vUv;\\n    void main() {\\n      vUv = uv;\\n      gl_Position = vec4(position, 0.0, 1.0);\\n    }\\n  \";const frag=/* glsl */\"\\n    precision highp float;\\n\\n    uniform float iTime;\\n    uniform vec3 iResolution;\\n    uniform float hue;\\n    uniform float hover;\\n    uniform float rot;\\n    uniform float hoverIntensity;\\n    varying vec2 vUv;\\n\\n    vec3 rgb2yiq(vec3 c) {\\n      float y = dot(c, vec3(0.299, 0.587, 0.114));\\n      float i = dot(c, vec3(0.596, -0.274, -0.322));\\n      float q = dot(c, vec3(0.211, -0.523, 0.312));\\n      return vec3(y, i, q);\\n    }\\n    \\n    vec3 yiq2rgb(vec3 c) {\\n      float r = c.x + 0.956 * c.y + 0.621 * c.z;\\n      float g = c.x - 0.272 * c.y - 0.647 * c.z;\\n      float b = c.x - 1.106 * c.y + 1.703 * c.z;\\n      return vec3(r, g, b);\\n    }\\n    \\n    vec3 adjustHue(vec3 color, float hueDeg) {\\n      float hueRad = hueDeg * 3.14159265 / 180.0;\\n      vec3 yiq = rgb2yiq(color);\\n      float cosA = cos(hueRad);\\n      float sinA = sin(hueRad);\\n      float i = yiq.y * cosA - yiq.z * sinA;\\n      float q = yiq.y * sinA + yiq.z * cosA;\\n      yiq.y = i;\\n      yiq.z = q;\\n      return yiq2rgb(yiq);\\n    }\\n    \\n    vec3 hash33(vec3 p3) {\\n      p3 = fract(p3 * vec3(0.1031, 0.11369, 0.13787));\\n      p3 += dot(p3, p3.yxz + 19.19);\\n      return -1.0 + 2.0 * fract(vec3(\\n        p3.x + p3.y,\\n        p3.x + p3.z,\\n        p3.y + p3.z\\n      ) * p3.zyx);\\n    }\\n    \\n    float snoise3(vec3 p) {\\n      const float K1 = 0.333333333;\\n      const float K2 = 0.166666667;\\n      vec3 i = floor(p + (p.x + p.y + p.z) * K1);\\n      vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\\n      vec3 e = step(vec3(0.0), d0 - d0.yzx);\\n      vec3 i1 = e * (1.0 - e.zxy);\\n      vec3 i2 = 1.0 - e.zxy * (1.0 - e);\\n      vec3 d1 = d0 - (i1 - K2);\\n      vec3 d2 = d0 - (i2 - K1);\\n      vec3 d3 = d0 - 0.5;\\n      vec4 h = max(0.6 - vec4(\\n        dot(d0, d0),\\n        dot(d1, d1),\\n        dot(d2, d2),\\n        dot(d3, d3)\\n      ), 0.0);\\n      vec4 n = h * h * h * h * vec4(\\n        dot(d0, hash33(i)),\\n        dot(d1, hash33(i + i1)),\\n        dot(d2, hash33(i + i2)),\\n        dot(d3, hash33(i + 1.0))\\n      );\\n      return dot(vec4(31.316), n);\\n    }\\n    \\n    vec4 extractAlpha(vec3 colorIn) {\\n      float a = max(max(colorIn.r, colorIn.g), colorIn.b);\\n      return vec4(colorIn.rgb / (a + 1e-5), a);\\n    }\\n    \\n    const vec3 baseColor1 = vec3(0.611765, 0.262745, 0.996078);\\n    const vec3 baseColor2 = vec3(0.298039, 0.760784, 0.913725);\\n    const vec3 baseColor3 = vec3(0.062745, 0.078431, 0.600000);\\n    const float innerRadius = 0.6;\\n    const float noiseScale = 0.65;\\n    \\n    float light1(float intensity, float attenuation, float dist) {\\n      return intensity / (1.0 + dist * attenuation);\\n    }\\n    \\n    float light2(float intensity, float attenuation, float dist) {\\n      return intensity / (1.0 + dist * dist * attenuation);\\n    }\\n    \\n    vec4 draw(vec2 uv) {\\n      vec3 color1 = adjustHue(baseColor1, hue);\\n      vec3 color2 = adjustHue(baseColor2, hue);\\n      vec3 color3 = adjustHue(baseColor3, hue);\\n      \\n      float ang = atan(uv.y, uv.x);\\n      float len = length(uv);\\n      float invLen = len > 0.0 ? 1.0 / len : 0.0;\\n      \\n      float n0 = snoise3(vec3(uv * noiseScale, iTime * 0.5)) * 0.5 + 0.5;\\n      float r0 = mix(mix(innerRadius, 1.0, 0.4), mix(innerRadius, 1.0, 0.6), n0);\\n      float d0 = distance(uv, (r0 * invLen) * uv);\\n      float v0 = light1(1.0, 10.0, d0);\\n      v0 *= smoothstep(r0 * 1.05, r0, len);\\n      float cl = cos(ang + iTime * 2.0) * 0.5 + 0.5;\\n      \\n      float a = iTime * -1.0;\\n      vec2 pos = vec2(cos(a), sin(a)) * r0;\\n      float d = distance(uv, pos);\\n      float v1 = light2(1.5, 5.0, d);\\n      v1 *= light1(1.0, 50.0, d0);\\n      \\n      float v2 = smoothstep(1.0, mix(innerRadius, 1.0, n0 * 0.5), len);\\n      float v3 = smoothstep(innerRadius, mix(innerRadius, 1.0, 0.5), len);\\n      \\n      vec3 col = mix(color1, color2, cl);\\n      col = mix(color3, col, v0);\\n      col = (col + v1) * v2 * v3;\\n      col = clamp(col, 0.0, 1.0);\\n      \\n      return extractAlpha(col);\\n    }\\n    \\n    vec4 mainImage(vec2 fragCoord) {\\n      vec2 center = iResolution.xy * 0.5;\\n      float size = min(iResolution.x, iResolution.y);\\n      vec2 uv = (fragCoord - center) / size * 2.0;\\n      \\n      float angle = rot;\\n      float s = sin(angle);\\n      float c = cos(angle);\\n      uv = vec2(c * uv.x - s * uv.y, s * uv.x + c * uv.y);\\n      \\n      uv.x += hover * hoverIntensity * 0.1 * sin(uv.y * 10.0 + iTime);\\n      uv.y += hover * hoverIntensity * 0.1 * sin(uv.x * 10.0 + iTime);\\n      \\n      return draw(uv);\\n    }\\n    \\n    void main() {\\n      vec2 fragCoord = vUv * iResolution.xy;\\n      vec4 col = mainImage(fragCoord);\\n      gl_FragColor = vec4(col.rgb * col.a, col.a);\\n    }\\n  \";useEffect(()=>{const container=ctnDom.current;if(!container)return;const renderer=new Renderer({alpha:true,premultipliedAlpha:false});const gl=renderer.gl;gl.clearColor(0,0,0,0);container.appendChild(gl.canvas);const geometry=new Triangle(gl);const program=new Program(gl,{vertex:vert,fragment:frag,uniforms:{iTime:{value:0},iResolution:{value:new Vec3(gl.canvas.width,gl.canvas.height,gl.canvas.width/gl.canvas.height)},hue:{value:hue},hover:{value:0},rot:{value:0},hoverIntensity:{value:hoverIntensity}}});const mesh=new Mesh(gl,{geometry,program});function resize(){if(!container)return;const dpr=window.devicePixelRatio||1;const width=container.clientWidth;const height=container.clientHeight;renderer.setSize(width*dpr,height*dpr);gl.canvas.style.width=width+\"px\";gl.canvas.style.height=height+\"px\";program.uniforms.iResolution.value.set(gl.canvas.width,gl.canvas.height,gl.canvas.width/gl.canvas.height);}window.addEventListener(\"resize\",resize);resize();let targetHover=0;let lastTime=0;let currentRot=0;const rotationSpeed=0.3;const handleMouseMove=e=>{const rect=container.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;const width=rect.width;const height=rect.height;const size=Math.min(width,height);const centerX=width/2;const centerY=height/2;const uvX=(x-centerX)/size*2.0;const uvY=(y-centerY)/size*2.0;if(Math.sqrt(uvX*uvX+uvY*uvY)<0.8){targetHover=1;}else{targetHover=0;}};const handleMouseLeave=()=>{targetHover=0;};container.addEventListener(\"mousemove\",handleMouseMove);container.addEventListener(\"mouseleave\",handleMouseLeave);let rafId;const update=t=>{rafId=requestAnimationFrame(update);const dt=(t-lastTime)*0.001;lastTime=t;program.uniforms.iTime.value=t*0.001;program.uniforms.hue.value=hue;program.uniforms.hoverIntensity.value=hoverIntensity;const effectiveHover=forceHoverState?1:targetHover;program.uniforms.hover.value+=(effectiveHover-program.uniforms.hover.value)*0.1;if(rotateOnHover&&effectiveHover>0.5){currentRot+=dt*rotationSpeed;}program.uniforms.rot.value=currentRot;renderer.render({scene:mesh});};rafId=requestAnimationFrame(update);return()=>{var _gl$getExtension;cancelAnimationFrame(rafId);window.removeEventListener(\"resize\",resize);container.removeEventListener(\"mousemove\",handleMouseMove);container.removeEventListener(\"mouseleave\",handleMouseLeave);container.removeChild(gl.canvas);(_gl$getExtension=gl.getExtension(\"WEBGL_lose_context\"))===null||_gl$getExtension===void 0?void 0:_gl$getExtension.loseContext();};},[hue,hoverIntensity,rotateOnHover,forceHoverState]);return/*#__PURE__*/_jsx(\"div\",{ref:ctnDom,className:\"orb-container\"});}","map":{"version":3,"names":["useEffect","useRef","Renderer","Program","Mesh","Triangle","Vec3","jsx","_jsx","Orb","_ref","hue","hoverIntensity","rotateOnHover","forceHoverState","ctnDom","vert","frag","container","current","renderer","alpha","premultipliedAlpha","gl","clearColor","appendChild","canvas","geometry","program","vertex","fragment","uniforms","iTime","value","iResolution","width","height","hover","rot","mesh","resize","dpr","window","devicePixelRatio","clientWidth","clientHeight","setSize","style","set","addEventListener","targetHover","lastTime","currentRot","rotationSpeed","handleMouseMove","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","size","Math","min","centerX","centerY","uvX","uvY","sqrt","handleMouseLeave","rafId","update","t","requestAnimationFrame","dt","effectiveHover","render","scene","_gl$getExtension","cancelAnimationFrame","removeEventListener","removeChild","getExtension","loseContext","ref","className"],"sources":["/home/nigro/Documents/personal_website/ngrlcu.github.io/src/components/Orb.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { Renderer, Program, Mesh, Triangle, Vec3 } from \"ogl\";\n\nimport '../assets/styles/Orb.scss';\n\ninterface OrbProps {\n  hue?: number;\n  hoverIntensity?: number;\n  rotateOnHover?: boolean;\n  forceHoverState?: boolean;\n}\n\nexport default function Orb({\n  hue = 0,\n  hoverIntensity = 0.2,\n  rotateOnHover = true,\n  forceHoverState = false,\n}: OrbProps) {\n  const ctnDom = useRef<HTMLDivElement>(null);\n\n  const vert = /* glsl */ `\n    precision highp float;\n    attribute vec2 position;\n    attribute vec2 uv;\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  `;\n\n  const frag = /* glsl */ `\n    precision highp float;\n\n    uniform float iTime;\n    uniform vec3 iResolution;\n    uniform float hue;\n    uniform float hover;\n    uniform float rot;\n    uniform float hoverIntensity;\n    varying vec2 vUv;\n\n    vec3 rgb2yiq(vec3 c) {\n      float y = dot(c, vec3(0.299, 0.587, 0.114));\n      float i = dot(c, vec3(0.596, -0.274, -0.322));\n      float q = dot(c, vec3(0.211, -0.523, 0.312));\n      return vec3(y, i, q);\n    }\n    \n    vec3 yiq2rgb(vec3 c) {\n      float r = c.x + 0.956 * c.y + 0.621 * c.z;\n      float g = c.x - 0.272 * c.y - 0.647 * c.z;\n      float b = c.x - 1.106 * c.y + 1.703 * c.z;\n      return vec3(r, g, b);\n    }\n    \n    vec3 adjustHue(vec3 color, float hueDeg) {\n      float hueRad = hueDeg * 3.14159265 / 180.0;\n      vec3 yiq = rgb2yiq(color);\n      float cosA = cos(hueRad);\n      float sinA = sin(hueRad);\n      float i = yiq.y * cosA - yiq.z * sinA;\n      float q = yiq.y * sinA + yiq.z * cosA;\n      yiq.y = i;\n      yiq.z = q;\n      return yiq2rgb(yiq);\n    }\n    \n    vec3 hash33(vec3 p3) {\n      p3 = fract(p3 * vec3(0.1031, 0.11369, 0.13787));\n      p3 += dot(p3, p3.yxz + 19.19);\n      return -1.0 + 2.0 * fract(vec3(\n        p3.x + p3.y,\n        p3.x + p3.z,\n        p3.y + p3.z\n      ) * p3.zyx);\n    }\n    \n    float snoise3(vec3 p) {\n      const float K1 = 0.333333333;\n      const float K2 = 0.166666667;\n      vec3 i = floor(p + (p.x + p.y + p.z) * K1);\n      vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\n      vec3 e = step(vec3(0.0), d0 - d0.yzx);\n      vec3 i1 = e * (1.0 - e.zxy);\n      vec3 i2 = 1.0 - e.zxy * (1.0 - e);\n      vec3 d1 = d0 - (i1 - K2);\n      vec3 d2 = d0 - (i2 - K1);\n      vec3 d3 = d0 - 0.5;\n      vec4 h = max(0.6 - vec4(\n        dot(d0, d0),\n        dot(d1, d1),\n        dot(d2, d2),\n        dot(d3, d3)\n      ), 0.0);\n      vec4 n = h * h * h * h * vec4(\n        dot(d0, hash33(i)),\n        dot(d1, hash33(i + i1)),\n        dot(d2, hash33(i + i2)),\n        dot(d3, hash33(i + 1.0))\n      );\n      return dot(vec4(31.316), n);\n    }\n    \n    vec4 extractAlpha(vec3 colorIn) {\n      float a = max(max(colorIn.r, colorIn.g), colorIn.b);\n      return vec4(colorIn.rgb / (a + 1e-5), a);\n    }\n    \n    const vec3 baseColor1 = vec3(0.611765, 0.262745, 0.996078);\n    const vec3 baseColor2 = vec3(0.298039, 0.760784, 0.913725);\n    const vec3 baseColor3 = vec3(0.062745, 0.078431, 0.600000);\n    const float innerRadius = 0.6;\n    const float noiseScale = 0.65;\n    \n    float light1(float intensity, float attenuation, float dist) {\n      return intensity / (1.0 + dist * attenuation);\n    }\n    \n    float light2(float intensity, float attenuation, float dist) {\n      return intensity / (1.0 + dist * dist * attenuation);\n    }\n    \n    vec4 draw(vec2 uv) {\n      vec3 color1 = adjustHue(baseColor1, hue);\n      vec3 color2 = adjustHue(baseColor2, hue);\n      vec3 color3 = adjustHue(baseColor3, hue);\n      \n      float ang = atan(uv.y, uv.x);\n      float len = length(uv);\n      float invLen = len > 0.0 ? 1.0 / len : 0.0;\n      \n      float n0 = snoise3(vec3(uv * noiseScale, iTime * 0.5)) * 0.5 + 0.5;\n      float r0 = mix(mix(innerRadius, 1.0, 0.4), mix(innerRadius, 1.0, 0.6), n0);\n      float d0 = distance(uv, (r0 * invLen) * uv);\n      float v0 = light1(1.0, 10.0, d0);\n      v0 *= smoothstep(r0 * 1.05, r0, len);\n      float cl = cos(ang + iTime * 2.0) * 0.5 + 0.5;\n      \n      float a = iTime * -1.0;\n      vec2 pos = vec2(cos(a), sin(a)) * r0;\n      float d = distance(uv, pos);\n      float v1 = light2(1.5, 5.0, d);\n      v1 *= light1(1.0, 50.0, d0);\n      \n      float v2 = smoothstep(1.0, mix(innerRadius, 1.0, n0 * 0.5), len);\n      float v3 = smoothstep(innerRadius, mix(innerRadius, 1.0, 0.5), len);\n      \n      vec3 col = mix(color1, color2, cl);\n      col = mix(color3, col, v0);\n      col = (col + v1) * v2 * v3;\n      col = clamp(col, 0.0, 1.0);\n      \n      return extractAlpha(col);\n    }\n    \n    vec4 mainImage(vec2 fragCoord) {\n      vec2 center = iResolution.xy * 0.5;\n      float size = min(iResolution.x, iResolution.y);\n      vec2 uv = (fragCoord - center) / size * 2.0;\n      \n      float angle = rot;\n      float s = sin(angle);\n      float c = cos(angle);\n      uv = vec2(c * uv.x - s * uv.y, s * uv.x + c * uv.y);\n      \n      uv.x += hover * hoverIntensity * 0.1 * sin(uv.y * 10.0 + iTime);\n      uv.y += hover * hoverIntensity * 0.1 * sin(uv.x * 10.0 + iTime);\n      \n      return draw(uv);\n    }\n    \n    void main() {\n      vec2 fragCoord = vUv * iResolution.xy;\n      vec4 col = mainImage(fragCoord);\n      gl_FragColor = vec4(col.rgb * col.a, col.a);\n    }\n  `;\n\n  useEffect(() => {\n    const container = ctnDom.current;\n    if (!container) return;\n\n    const renderer = new Renderer({ alpha: true, premultipliedAlpha: false });\n    const gl = renderer.gl;\n    gl.clearColor(0, 0, 0, 0);\n    container.appendChild(gl.canvas);\n\n    const geometry = new Triangle(gl);\n    const program = new Program(gl, {\n      vertex: vert,\n      fragment: frag,\n      uniforms: {\n        iTime: { value: 0 },\n        iResolution: {\n          value: new Vec3(\n            gl.canvas.width,\n            gl.canvas.height,\n            gl.canvas.width / gl.canvas.height\n          ),\n        },\n        hue: { value: hue },\n        hover: { value: 0 },\n        rot: { value: 0 },\n        hoverIntensity: { value: hoverIntensity },\n      },\n    });\n\n    const mesh = new Mesh(gl, { geometry, program });\n\n    function resize() {\n      if (!container) return;\n      const dpr = window.devicePixelRatio || 1;\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      renderer.setSize(width * dpr, height * dpr);\n      gl.canvas.style.width = width + \"px\";\n      gl.canvas.style.height = height + \"px\";\n      program.uniforms.iResolution.value.set(\n        gl.canvas.width,\n        gl.canvas.height,\n        gl.canvas.width / gl.canvas.height\n      );\n    }\n    window.addEventListener(\"resize\", resize);\n    resize();\n\n    let targetHover = 0;\n    let lastTime = 0;\n    let currentRot = 0;\n    const rotationSpeed = 0.3;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const rect = container.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const width = rect.width;\n      const height = rect.height;\n      const size = Math.min(width, height);\n      const centerX = width / 2;\n      const centerY = height / 2;\n      const uvX = ((x - centerX) / size) * 2.0;\n      const uvY = ((y - centerY) / size) * 2.0;\n\n      if (Math.sqrt(uvX * uvX + uvY * uvY) < 0.8) {\n        targetHover = 1;\n      } else {\n        targetHover = 0;\n      }\n    };\n\n    const handleMouseLeave = () => {\n      targetHover = 0;\n    };\n\n    container.addEventListener(\"mousemove\", handleMouseMove);\n    container.addEventListener(\"mouseleave\", handleMouseLeave);\n\n    let rafId: number;\n    const update = (t: number) => {\n      rafId = requestAnimationFrame(update);\n      const dt = (t - lastTime) * 0.001;\n      lastTime = t;\n      program.uniforms.iTime.value = t * 0.001;\n      program.uniforms.hue.value = hue;\n      program.uniforms.hoverIntensity.value = hoverIntensity;\n\n      const effectiveHover = forceHoverState ? 1 : targetHover;\n      program.uniforms.hover.value += (effectiveHover - program.uniforms.hover.value) * 0.1;\n\n      if (rotateOnHover && effectiveHover > 0.5) {\n        currentRot += dt * rotationSpeed;\n      }\n      program.uniforms.rot.value = currentRot;\n\n      renderer.render({ scene: mesh });\n    };\n    rafId = requestAnimationFrame(update);\n\n    return () => {\n      cancelAnimationFrame(rafId);\n      window.removeEventListener(\"resize\", resize);\n      container.removeEventListener(\"mousemove\", handleMouseMove);\n      container.removeEventListener(\"mouseleave\", handleMouseLeave);\n      container.removeChild(gl.canvas);\n      gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n    };\n  }, [hue, hoverIntensity, rotateOnHover, forceHoverState]);\n\n  return <div ref={ctnDom} className=\"orb-container\" />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}