{"ast":null,"code":"import * as Vec2Func from './functions/Vec2Func.js';\nexport class Vec2 extends Array {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    super(x, y);\n    return this;\n  }\n  get x() {\n    return this[0];\n  }\n  get y() {\n    return this[1];\n  }\n  set x(v) {\n    this[0] = v;\n  }\n  set y(v) {\n    this[1] = v;\n  }\n  set(x) {\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    if (x.length) return this.copy(x);\n    Vec2Func.set(this, x, y);\n    return this;\n  }\n  copy(v) {\n    Vec2Func.copy(this, v);\n    return this;\n  }\n  add(va, vb) {\n    if (vb) Vec2Func.add(this, va, vb);else Vec2Func.add(this, this, va);\n    return this;\n  }\n  sub(va, vb) {\n    if (vb) Vec2Func.subtract(this, va, vb);else Vec2Func.subtract(this, this, va);\n    return this;\n  }\n  multiply(v) {\n    if (v.length) Vec2Func.multiply(this, this, v);else Vec2Func.scale(this, this, v);\n    return this;\n  }\n  divide(v) {\n    if (v.length) Vec2Func.divide(this, this, v);else Vec2Func.scale(this, this, 1 / v);\n    return this;\n  }\n  inverse() {\n    let v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n    Vec2Func.inverse(this, v);\n    return this;\n  }\n\n  // Can't use 'length' as Array.prototype uses it\n  len() {\n    return Vec2Func.length(this);\n  }\n  distance(v) {\n    if (v) return Vec2Func.distance(this, v);else return Vec2Func.length(this);\n  }\n  squaredLen() {\n    return this.squaredDistance();\n  }\n  squaredDistance(v) {\n    if (v) return Vec2Func.squaredDistance(this, v);else return Vec2Func.squaredLength(this);\n  }\n  negate() {\n    let v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n    Vec2Func.negate(this, v);\n    return this;\n  }\n  cross(va, vb) {\n    if (vb) return Vec2Func.cross(va, vb);\n    return Vec2Func.cross(this, va);\n  }\n  scale(v) {\n    Vec2Func.scale(this, this, v);\n    return this;\n  }\n  normalize() {\n    Vec2Func.normalize(this, this);\n    return this;\n  }\n  dot(v) {\n    return Vec2Func.dot(this, v);\n  }\n  equals(v) {\n    return Vec2Func.exactEquals(this, v);\n  }\n  applyMatrix3(mat3) {\n    Vec2Func.transformMat3(this, this, mat3);\n    return this;\n  }\n  applyMatrix4(mat4) {\n    Vec2Func.transformMat4(this, this, mat4);\n    return this;\n  }\n  lerp(v, a) {\n    Vec2Func.lerp(this, this, v, a);\n    return this;\n  }\n  smoothLerp(v, decay, dt) {\n    Vec2Func.smoothLerp(this, this, v, decay, dt);\n    return this;\n  }\n  clone() {\n    return new Vec2(this[0], this[1]);\n  }\n  fromArray(a) {\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this[0] = a[o];\n    this[1] = a[o + 1];\n    return this;\n  }\n  toArray() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    a[o] = this[0];\n    a[o + 1] = this[1];\n    return a;\n  }\n}","map":{"version":3,"names":["Vec2Func","Vec2","Array","constructor","x","arguments","length","undefined","y","v","set","copy","add","va","vb","sub","subtract","multiply","scale","divide","inverse","len","distance","squaredLen","squaredDistance","squaredLength","negate","cross","normalize","dot","equals","exactEquals","applyMatrix3","mat3","transformMat3","applyMatrix4","mat4","transformMat4","lerp","a","smoothLerp","decay","dt","clone","fromArray","o","toArray"],"sources":["/home/nigro/Documents/personal_website/ngrlcu.github.io/node_modules/ogl/src/math/Vec2.js"],"sourcesContent":["import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    smoothLerp(v, decay, dt) {\n        Vec2Func.smoothLerp(this, this, v, decay, dt);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}