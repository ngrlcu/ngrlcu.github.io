{"ast":null,"code":"import BaseSegment from './BaseSegment.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { T_VALUES, C_VALUES } from './utils.js';\nconst tempVec3 = /* @__PURE__ */new Vec3();\nfunction cubicBezier(t, p0, p1, p2, p3) {\n  const k = 1 - t;\n  // prettier-ignore\n  return k * k * k * p0 + 3 * k * k * t * p1 + 3 * k * t * t * p2 + t * t * t * p3;\n}\nfunction cubicBezierDeriv(t, p0, p1, p2, p3) {\n  const k = 1 - t;\n  // prettier-ignore\n  return 3 * k * k * (p1 - p0) + 6 * k * t * (p2 - p1) + 3 * t * t * (p3 - p2);\n}\nexport default class CubicBezierSegment extends BaseSegment {\n  constructor(p0, p1, p2, p3) {\n    let tiltStart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    let tiltEnd = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    super();\n    this.p0 = p0;\n    this.p1 = p1;\n    this.p2 = p2;\n    this.p3 = p3;\n    this.tiltStart = tiltStart;\n    this.tiltEnd = tiltEnd;\n    this._len = -1;\n  }\n\n  /**\n   * Updates the segment length. You must call this method every time you change the curve's control points.\n   */\n  updateLength() {\n    // from https://github.com/Pomax/bezierjs/blob/d19695f3cc3ce383cf38ce4643f467deca7edb92/src/utils.js#L265\n    const z = 0.5;\n    const len = T_VALUES.length;\n    let sum = 0;\n    for (let i = 0, t; i < len; i++) {\n      t = z * T_VALUES[i] + z;\n      sum += C_VALUES[i] * this.getDerivativeAt(t, tempVec3).len();\n    }\n    this._len = z * sum;\n  }\n\n  /**\n   * Get point at relative position in curve according to segment length.\n   * @param {number} t Distance at time t in range [0 .. 1]\n   * @param {Vec3} out Optional Vec3 to output\n   * @returns {Vec3} Point at relative position\n   */\n  getPointAt(t) {\n    let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vec3();\n    out.x = cubicBezier(t, this.p0.x, this.p1.x, this.p2.x, this.p3.x);\n    out.y = cubicBezier(t, this.p0.y, this.p1.y, this.p2.y, this.p3.y);\n    out.z = cubicBezier(t, this.p0.z, this.p1.z, this.p2.z, this.p3.z);\n    return out;\n  }\n  getDerivativeAt(t) {\n    let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vec3();\n    out.x = cubicBezierDeriv(t, this.p0.x, this.p1.x, this.p2.x, this.p3.x);\n    out.y = cubicBezierDeriv(t, this.p0.y, this.p1.y, this.p2.y, this.p3.y);\n    out.z = cubicBezierDeriv(t, this.p0.z, this.p1.z, this.p2.z, this.p3.z);\n    return out;\n  }\n\n  /**\n   * Returns a unit vector tangent at t\n   * @param {number} t Distance at time t in range [0 .. 1]\n   * @param {Vec3} out Optional Vec3 to output\n   * @returns {Vec3} A unit vector\n   */\n  getTangentAt(t) {\n    let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vec3();\n    return this.getDerivativeAt(t, out).normalize();\n  }\n  lastPoint() {\n    return this.p3;\n  }\n}","map":{"version":3,"names":["BaseSegment","Vec3","T_VALUES","C_VALUES","tempVec3","cubicBezier","t","p0","p1","p2","p3","k","cubicBezierDeriv","CubicBezierSegment","constructor","tiltStart","arguments","length","undefined","tiltEnd","_len","updateLength","z","len","sum","i","getDerivativeAt","getPointAt","out","x","y","getTangentAt","normalize","lastPoint"],"sources":["/home/nigro/Documents/personal_website/ngrlcu.github.io/node_modules/ogl/src/extras/path/CubicBezierSegment.js"],"sourcesContent":["import BaseSegment from './BaseSegment.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { T_VALUES, C_VALUES } from './utils.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\n\nfunction cubicBezier(t, p0, p1, p2, p3) {\n    const k = 1 - t;\n    // prettier-ignore\n    return (\n        (k * k * k * p0) +\n        (3 * k * k * t * p1) +\n        (3 * k * t * t * p2) +\n        (t * t * t * p3)\n    );\n}\n\nfunction cubicBezierDeriv(t, p0, p1, p2, p3) {\n    const k = 1 - t;\n    // prettier-ignore\n    return (\n        (3 * k * k * (p1 - p0)) +\n        (6 * k * t * (p2 - p1)) +\n        (3 * t * t * (p3 - p2))\n    );\n}\n\nexport default class CubicBezierSegment extends BaseSegment {\n    constructor(p0, p1, p2, p3, tiltStart = 0, tiltEnd = 0) {\n        super();\n        this.p0 = p0;\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n\n        this.tiltStart = tiltStart;\n        this.tiltEnd = tiltEnd;\n\n        this._len = -1;\n    }\n\n    /**\n     * Updates the segment length. You must call this method every time you change the curve's control points.\n     */\n    updateLength() {\n        // from https://github.com/Pomax/bezierjs/blob/d19695f3cc3ce383cf38ce4643f467deca7edb92/src/utils.js#L265\n        const z = 0.5;\n        const len = T_VALUES.length;\n\n        let sum = 0;\n        for (let i = 0, t; i < len; i++) {\n            t = z * T_VALUES[i] + z;\n            sum += C_VALUES[i] * this.getDerivativeAt(t, tempVec3).len();\n        }\n\n        this._len = z * sum;\n    }\n\n    /**\n     * Get point at relative position in curve according to segment length.\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} Point at relative position\n     */\n    getPointAt(t, out = new Vec3()) {\n        out.x = cubicBezier(t, this.p0.x, this.p1.x, this.p2.x, this.p3.x);\n        out.y = cubicBezier(t, this.p0.y, this.p1.y, this.p2.y, this.p3.y);\n        out.z = cubicBezier(t, this.p0.z, this.p1.z, this.p2.z, this.p3.z);\n        return out;\n    }\n\n    getDerivativeAt(t, out = new Vec3()) {\n        out.x = cubicBezierDeriv(t, this.p0.x, this.p1.x, this.p2.x, this.p3.x);\n        out.y = cubicBezierDeriv(t, this.p0.y, this.p1.y, this.p2.y, this.p3.y);\n        out.z = cubicBezierDeriv(t, this.p0.z, this.p1.z, this.p2.z, this.p3.z);\n        return out;\n    }\n\n    /**\n     * Returns a unit vector tangent at t\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} A unit vector\n     */\n    getTangentAt(t, out = new Vec3()) {\n        return this.getDerivativeAt(t, out).normalize();\n    }\n\n    lastPoint() {\n        return this.p3;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}