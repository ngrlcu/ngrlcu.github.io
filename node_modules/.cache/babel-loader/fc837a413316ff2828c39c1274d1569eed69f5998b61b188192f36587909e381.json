{"ast":null,"code":"const NAMES = {\n  black: '#000000',\n  white: '#ffffff',\n  red: '#ff0000',\n  green: '#00ff00',\n  blue: '#0000ff',\n  fuchsia: '#ff00ff',\n  cyan: '#00ffff',\n  yellow: '#ffff00',\n  orange: '#ff8000'\n};\nexport function hexToRGB(hex) {\n  if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n  const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!rgb) console.warn(\"Unable to convert hex string \".concat(hex, \" to rgb values\"));\n  return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\nexport function numberToRGB(num) {\n  num = parseInt(num);\n  return [(num >> 16 & 255) / 255, (num >> 8 & 255) / 255, (num & 255) / 255];\n}\nexport function parseColor(color) {\n  // Empty\n  if (color === undefined) return [0, 0, 0];\n\n  // Decimal\n  if (arguments.length === 3) return arguments;\n\n  // Number\n  if (!isNaN(color)) return numberToRGB(color);\n\n  // Hex\n  if (color[0] === '#') return hexToRGB(color);\n\n  // Names\n  if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n  console.warn('Color format not recognised');\n  return [0, 0, 0];\n}","map":{"version":3,"names":["NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","length","rgb","exec","console","warn","concat","parseInt","numberToRGB","num","parseColor","color","undefined","arguments","isNaN","toLowerCase"],"sources":["/home/nigro/Documents/personal_website/ngrlcu.github.io/node_modules/ogl/src/math/functions/ColorFunc.js"],"sourcesContent":["const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACVC,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,SAAS;EAChBC,GAAG,EAAE,SAAS;EACdC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,SAASC,QAAQA,CAACC,GAAG,EAAE;EAC1B,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,EAAED,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;EACxF,MAAME,GAAG,GAAG,2CAA2C,CAACC,IAAI,CAACH,GAAG,CAAC;EACjE,IAAI,CAACE,GAAG,EAAEE,OAAO,CAACC,IAAI,iCAAAC,MAAA,CAAiCN,GAAG,mBAAgB,CAAC;EAC3E,OAAO,CAACO,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAAEK,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAAEK,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;AAC/F;AAEA,OAAO,SAASM,WAAWA,CAACC,GAAG,EAAE;EAC7BA,GAAG,GAAGF,QAAQ,CAACE,GAAG,CAAC;EACnB,OAAO,CAAC,CAAEA,GAAG,IAAI,EAAE,GAAI,GAAG,IAAI,GAAG,EAAE,CAAEA,GAAG,IAAI,CAAC,GAAI,GAAG,IAAI,GAAG,EAAE,CAACA,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;AACnF;AAEA,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAE;EAC9B;EACA,IAAIA,KAAK,KAAKC,SAAS,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAEzC;EACA,IAAIC,SAAS,CAACZ,MAAM,KAAK,CAAC,EAAE,OAAOY,SAAS;;EAE5C;EACA,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,EAAE,OAAOH,WAAW,CAACG,KAAK,CAAC;;EAE5C;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOZ,QAAQ,CAACY,KAAK,CAAC;;EAE5C;EACA,IAAItB,KAAK,CAACsB,KAAK,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE,OAAOhB,QAAQ,CAACV,KAAK,CAACsB,KAAK,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;EAE3EX,OAAO,CAACC,IAAI,CAAC,6BAA6B,CAAC;EAC3C,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}